provider "aws" {
  region = "us-east-1"
}

resource "aws_iam_role" "step_function_role" {
  name = "step_function_role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Action    = "sts:AssumeRole",
        Effect    = "Allow",
        Principal = {
          Service = "states.amazonaws.com"
        }
      }
    ]
  })
}

resource "aws_iam_policy" "step_function_policy" {
  name = "step_function_policy"

  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Action = [
          "lambda:InvokeFunction"
        ],
        Effect   = "Allow",
        Resource = [
          "arn:aws:lambda:us-east-1:123456789012:function:Data_enrichment",
          "arn:aws:lambda:us-east-1:123456789012:function:chunking",
          "arn:aws:lambda:us-east-1:123456789012:function:embedding"
        ]
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "attach_policy" {
  role       = aws_iam_role.step_function_role.name
  policy_arn = aws_iam_policy.step_function_policy.arn
}

resource "aws_sfn_state_machine" "ssre_pipeline" {
  name     = "SSRE_Contract_Ingestion_Pipeline"
  role_arn = aws_iam_role.step_function_role.arn

  definition = <<DEFINITION
  {
    "Comment": "Example SSRE Contract Ingestion Pipeline",
    "StartAt": "DataEnrichment",
    "States": {
      "DataEnrichment": {
        "Type": "Task",
        "Resource": "arn:aws:lambda:us-east-1:123456789012:function:Data_enrichment",
        "Retry": [
          {
            "ErrorEquals": ["Lambda.ServiceException", "Lambda.AWSLambdaException", "Lambda.TooManyRequestsException"],
            "IntervalSeconds": 2,
            "MaxAttempts": 2,
            "BackoffRate": 2
          }
        ],
        "Next": "Chunking"
      },
      "Chunking": {
        "Type": "Task",
        "Resource": "arn:aws:lambda:us-east-1:123456789012:function:chunking",
        "Retry": [
          {
            "ErrorEquals": ["Lambda.ServiceException", "Lambda.AWSLambdaException", "Lambda.TooManyRequestsException"],
            "IntervalSeconds": 2,
            "MaxAttempts": 2,
            "BackoffRate": 2
          }
        ],
        "Next": "Embedding"
      },
      "Embedding": {
        "Type": "Task",
        "Resource": "arn:aws:lambda:us-east-1:123456789012:function:embedding",
        "Retry": [
          {
            "ErrorEquals": ["Lambda.ServiceException", "Lambda.AWSLambdaException", "Lambda.TooManyRequestsException"],
            "IntervalSeconds": 2,
            "MaxAttempts": 2,
            "BackoffRate": 2
          }
        ],
        "End": true
      }
    }
  }
  DEFINITION
}
